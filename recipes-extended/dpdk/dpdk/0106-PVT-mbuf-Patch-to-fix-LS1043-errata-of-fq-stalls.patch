From eab4aa03421054821040cc2a80181fcbe547ce15 Mon Sep 17 00:00:00 2001
From: Alok Makhariya <alok.makhariya@nxp.com>
Date: Mon, 15 Jan 2018 21:19:38 +0530
Subject: [PATCH 106/166] PVT: mbuf: Patch to fix LS1043 errata of fq stalls

Signed-off-by: Alok Makhariya <alok.makhariya@nxp.com>
Signed-off-by: Nipun Gupta <nipun.gupta@nxp.com>
---
 lib/librte_mbuf/rte_mbuf.c                 | 24 ++++++++++++++++++++++++
 lib/librte_mempool/rte_mempool.c           | 27 +++++++++++++++++++++++++++
 lib/librte_mempool/rte_mempool.h           |  9 +++++++++
 lib/librte_mempool/rte_mempool_version.map |  2 ++
 4 files changed, 62 insertions(+)

diff --git a/lib/librte_mbuf/rte_mbuf.c b/lib/librte_mbuf/rte_mbuf.c
index 9528e5deadfa..cde202aa36ac 100644
--- a/lib/librte_mbuf/rte_mbuf.c
+++ b/lib/librte_mbuf/rte_mbuf.c
@@ -202,6 +202,26 @@ rte_pktmbuf_pool_create(const char *name, unsigned n,
 		rte_errno = EINVAL;
 		return NULL;
 	}
+
+#ifdef RTE_LIBRTE_DPAA_MEMPOOL
+/* NXP LS1043ARDB specific changes
+ * LS1043_MAX_BUF_SIZE indicates max buffer size supported for LS1043 soc.
+ * SVR_LS1043A indicates LS1043 board type.
+ * Errata solution for ls1043
+ */
+	/* Set the dpaa_svr_family the first thing if not already set */
+	if (!dpaa_svr_family)
+		set_dpaa_svr_family();
+
+	if (dpaa_svr_family == SVR_LS1043A_FAMILY) {
+		if (data_room_size <= LS1043_MAX_BUF_SIZE)
+			data_room_size = LS1043_MAX_BUF_SIZE - priv_size;
+		else {
+			RTE_LOG(ERR, MBUF, "Buf size not supported\n");
+			return NULL;
+		}
+	}
+#endif
 	elt_size = sizeof(struct rte_mbuf) + (unsigned)priv_size +
 		(unsigned)data_room_size;
 	mbp_priv.mbuf_data_room_size = data_room_size;
@@ -212,6 +232,10 @@ rte_pktmbuf_pool_create(const char *name, unsigned n,
 	if (mp == NULL)
 		return NULL;
 
+#ifdef RTE_LIBRTE_DPAA_MEMPOOL
+	if (dpaa_svr_family == SVR_LS1043A_FAMILY)
+		mp->flags |= MEMPOOL_F_CAPA_BLK_ALIGNED_OBJECTS;
+#endif
 	mp_ops_name = rte_mbuf_best_mempool_ops();
 	ret = rte_mempool_set_ops_byname(mp, mp_ops_name, NULL);
 	if (ret != 0) {
diff --git a/lib/librte_mempool/rte_mempool.c b/lib/librte_mempool/rte_mempool.c
index 5bd74eac83a1..c3658dcdde2c 100644
--- a/lib/librte_mempool/rte_mempool.c
+++ b/lib/librte_mempool/rte_mempool.c
@@ -100,6 +100,21 @@ static unsigned get_gcd(unsigned a, unsigned b)
 	return a;
 }
 
+#ifdef RTE_LIBRTE_DPAA_MEMPOOL
+unsigned int dpaa_svr_family;
+void set_dpaa_svr_family(void)
+{
+	FILE *svr_file = NULL;
+
+	svr_file = fopen("/sys/devices/soc0/soc_id", "r");
+	if (svr_file) {
+		if (fscanf(svr_file, "svr:%x", &dpaa_svr_family) > 0)
+			dpaa_svr_family &= SVR_MASK;
+		fclose(svr_file);
+	}
+}
+#endif
+
 /*
  * Depending on memory configuration, objects addresses are spread
  * between channels and ranks in RAM: the pool allocator will add
@@ -249,6 +264,12 @@ rte_mempool_xmem_size(uint32_t elt_num, size_t total_elt_sz, uint32_t pg_shift,
 		/* alignment need one additional object */
 		elt_num += 1;
 
+#ifdef RTE_LIBRTE_DPAA_MEMPOOL
+	if (dpaa_svr_family == SVR_LS1043A_FAMILY &&
+			flags & MEMPOOL_F_CAPA_BLK_ALIGNED_OBJECTS)
+		elt_num += LS1043_MAX_MEMZONES;
+#endif
+
 	if (total_elt_sz == 0)
 		return 0;
 
@@ -284,6 +305,12 @@ rte_mempool_xmem_usage(__rte_unused void *vaddr, uint32_t elt_num,
 		/* alignment need one additional object */
 		elt_num += 1;
 
+#ifdef RTE_LIBRTE_DPAA_MEMPOOL
+	if (dpaa_svr_family == SVR_LS1043A_FAMILY &&
+			flags & MEMPOOL_F_CAPA_BLK_ALIGNED_OBJECTS)
+		elt_num += LS1043_MAX_MEMZONES;
+#endif
+
 	/* if iova is NULL, assume contiguous memory */
 	if (iova == NULL) {
 		start = 0;
diff --git a/lib/librte_mempool/rte_mempool.h b/lib/librte_mempool/rte_mempool.h
index e21026aa77ed..540079faaacc 100644
--- a/lib/librte_mempool/rte_mempool.h
+++ b/lib/librte_mempool/rte_mempool.h
@@ -293,6 +293,15 @@ struct rte_mempool {
  */
 #define MEMPOOL_F_CAPA_BLK_ALIGNED_OBJECTS 0x0080
 
+#ifdef RTE_LIBRTE_DPAA_MEMPOOL
+#define SVR_LS1043A_FAMILY	0x87920000
+#define SVR_MASK		0xffff0000
+#define LS1043_MAX_BUF_SIZE	3904
+#define LS1043_MAX_MEMZONES	512
+extern unsigned int dpaa_svr_family;
+void set_dpaa_svr_family(void);
+#endif
+
 /**
  * @internal When debug is enabled, store some statistics.
  *
diff --git a/lib/librte_mempool/rte_mempool_version.map b/lib/librte_mempool/rte_mempool_version.map
index 62b76f91290c..ad7180a460cb 100644
--- a/lib/librte_mempool/rte_mempool_version.map
+++ b/lib/librte_mempool/rte_mempool_version.map
@@ -45,9 +45,11 @@ DPDK_16.07 {
 DPDK_17.11 {
 	global:
 
+	dpaa_svr_family;
 	rte_mempool_ops_get_capabilities;
 	rte_mempool_ops_register_memory_area;
 	rte_mempool_populate_iova;
 	rte_mempool_populate_iova_tab;
+	set_dpaa_svr_family;
 
 } DPDK_16.07;
-- 
2.14.3

